// Generated from c:/Users/Ariel/Desktop/49689/antlr-Ariel-project/MiniLang.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,27,138,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,1,
0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,
3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,
19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,
1,24,5,24,122,8,24,10,24,12,24,125,9,24,1,25,4,25,128,8,25,11,25,12,25,129,
1,26,4,26,133,8,26,11,26,12,26,134,1,26,1,26,0,0,27,1,1,3,2,5,3,7,4,9,5,
11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,1,0,4,2,0,65,90,97,
122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,32,140,0,1,
1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,1,55,1,0,0,0,3,59,1,0,
0,0,5,63,1,0,0,0,7,71,1,0,0,0,9,75,1,0,0,0,11,77,1,0,0,0,13,79,1,0,0,0,15,
81,1,0,0,0,17,83,1,0,0,0,19,85,1,0,0,0,21,87,1,0,0,0,23,89,1,0,0,0,25,91,
1,0,0,0,27,93,1,0,0,0,29,95,1,0,0,0,31,97,1,0,0,0,33,99,1,0,0,0,35,101,1,
0,0,0,37,103,1,0,0,0,39,105,1,0,0,0,41,107,1,0,0,0,43,110,1,0,0,0,45,113,
1,0,0,0,47,116,1,0,0,0,49,119,1,0,0,0,51,127,1,0,0,0,53,132,1,0,0,0,55,56,
5,108,0,0,56,57,5,101,0,0,57,58,5,116,0,0,58,2,1,0,0,0,59,60,5,102,0,0,60,
61,5,111,0,0,61,62,5,114,0,0,62,4,1,0,0,0,63,64,5,99,0,0,64,65,5,111,0,0,
65,66,5,110,0,0,66,67,5,115,0,0,67,68,5,111,0,0,68,69,5,108,0,0,69,70,5,
101,0,0,70,6,1,0,0,0,71,72,5,108,0,0,72,73,5,111,0,0,73,74,5,103,0,0,74,
8,1,0,0,0,75,76,5,46,0,0,76,10,1,0,0,0,77,78,5,59,0,0,78,12,1,0,0,0,79,80,
5,44,0,0,80,14,1,0,0,0,81,82,5,61,0,0,82,16,1,0,0,0,83,84,5,91,0,0,84,18,
1,0,0,0,85,86,5,93,0,0,86,20,1,0,0,0,87,88,5,123,0,0,88,22,1,0,0,0,89,90,
5,125,0,0,90,24,1,0,0,0,91,92,5,40,0,0,92,26,1,0,0,0,93,94,5,41,0,0,94,28,
1,0,0,0,95,96,5,43,0,0,96,30,1,0,0,0,97,98,5,45,0,0,98,32,1,0,0,0,99,100,
5,42,0,0,100,34,1,0,0,0,101,102,5,47,0,0,102,36,1,0,0,0,103,104,5,60,0,0,
104,38,1,0,0,0,105,106,5,62,0,0,106,40,1,0,0,0,107,108,5,60,0,0,108,109,
5,61,0,0,109,42,1,0,0,0,110,111,5,62,0,0,111,112,5,61,0,0,112,44,1,0,0,0,
113,114,5,61,0,0,114,115,5,61,0,0,115,46,1,0,0,0,116,117,5,33,0,0,117,118,
5,61,0,0,118,48,1,0,0,0,119,123,7,0,0,0,120,122,7,1,0,0,121,120,1,0,0,0,
122,125,1,0,0,0,123,121,1,0,0,0,123,124,1,0,0,0,124,50,1,0,0,0,125,123,1,
0,0,0,126,128,7,2,0,0,127,126,1,0,0,0,128,129,1,0,0,0,129,127,1,0,0,0,129,
130,1,0,0,0,130,52,1,0,0,0,131,133,7,3,0,0,132,131,1,0,0,0,133,134,1,0,0,
0,134,132,1,0,0,0,134,135,1,0,0,0,135,136,1,0,0,0,136,137,6,26,0,0,137,54,
1,0,0,0,4,0,123,129,134,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class MiniLangLexer extends antlr4.Lexer {

    static grammarFileName = "MiniLang.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'let'", "'for'", "'console'", "'log'", "'.'", 
                         "';'", "','", "'='", "'['", "']'", "'{'", "'}'", 
                         "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'<'", 
                         "'>'", "'<='", "'>='", "'=='", "'!='" ];
	static symbolicNames = [ null, "LET", "FOR", "CONSOLE", "LOG", "DOT", "SEMI", 
                          "COMMA", "ASSIGN", "LBRACK", "RBRACK", "LBRACE", 
                          "RBRACE", "LPAREN", "RPAREN", "ADD", "SUB", "MUL", 
                          "DIV", "LT", "GT", "LE", "GE", "EQ", "NEQ", "Identifier", 
                          "Number", "WS" ];
	static ruleNames = [ "LET", "FOR", "CONSOLE", "LOG", "DOT", "SEMI", "COMMA", 
                      "ASSIGN", "LBRACK", "RBRACK", "LBRACE", "RBRACE", 
                      "LPAREN", "RPAREN", "ADD", "SUB", "MUL", "DIV", "LT", 
                      "GT", "LE", "GE", "EQ", "NEQ", "Identifier", "Number", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

MiniLangLexer.EOF = antlr4.Token.EOF;
MiniLangLexer.LET = 1;
MiniLangLexer.FOR = 2;
MiniLangLexer.CONSOLE = 3;
MiniLangLexer.LOG = 4;
MiniLangLexer.DOT = 5;
MiniLangLexer.SEMI = 6;
MiniLangLexer.COMMA = 7;
MiniLangLexer.ASSIGN = 8;
MiniLangLexer.LBRACK = 9;
MiniLangLexer.RBRACK = 10;
MiniLangLexer.LBRACE = 11;
MiniLangLexer.RBRACE = 12;
MiniLangLexer.LPAREN = 13;
MiniLangLexer.RPAREN = 14;
MiniLangLexer.ADD = 15;
MiniLangLexer.SUB = 16;
MiniLangLexer.MUL = 17;
MiniLangLexer.DIV = 18;
MiniLangLexer.LT = 19;
MiniLangLexer.GT = 20;
MiniLangLexer.LE = 21;
MiniLangLexer.GE = 22;
MiniLangLexer.EQ = 23;
MiniLangLexer.NEQ = 24;
MiniLangLexer.Identifier = 25;
MiniLangLexer.Number = 26;
MiniLangLexer.WS = 27;



